{"ast":null,"code":"import React,{useEffect}from\"react\";import ReactDOM from\"react-dom/client\";import{BrowserRouter as Router}from\"react-router-dom\";import App from\"./App\";import\"./theme.scss\";// Import the theme styles\nimport{FormDataProvider}from\"./context/FormDataContext\";import{jsx as _jsx}from\"react/jsx-runtime\";const root=ReactDOM.createRoot(document.getElementById(\"root\"));const Root=()=>{useEffect(()=>{// Function to apply the theme based on user's preference\nconst applyTheme=e=>{if(e.matches){document.documentElement.setAttribute(\"data-theme\",\"dark\");}else{document.documentElement.setAttribute(\"data-theme\",\"light\");}};// Detect user's preference\nconst darkModeMediaQuery=window.matchMedia(\"(prefers-color-scheme: dark)\");applyTheme(darkModeMediaQuery);// Add listener for changes\ndarkModeMediaQuery.addEventListener(\"change\",applyTheme);// Cleanup listener on component unmount\nreturn()=>{darkModeMediaQuery.removeEventListener(\"change\",applyTheme);};},[]);return/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(FormDataProvider,{children:/*#__PURE__*/_jsx(App,{})})})});};root.render(/*#__PURE__*/_jsx(Root,{}));","map":{"version":3,"names":["React","useEffect","ReactDOM","BrowserRouter","Router","App","FormDataProvider","jsx","_jsx","root","createRoot","document","getElementById","Root","applyTheme","e","matches","documentElement","setAttribute","darkModeMediaQuery","window","matchMedia","addEventListener","removeEventListener","StrictMode","children","render"],"sources":["/Users/ayushshukla/Desktop/ayushpred/client/src/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./theme.scss\"; // Import the theme styles\nimport { FormDataProvider } from \"./context/FormDataContext\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nconst Root = () => {\n  useEffect(() => {\n    // Function to apply the theme based on user's preference\n    const applyTheme = (e) => {\n      if (e.matches) {\n        document.documentElement.setAttribute(\"data-theme\", \"dark\");\n      } else {\n        document.documentElement.setAttribute(\"data-theme\", \"light\");\n      }\n    };\n\n    // Detect user's preference\n    const darkModeMediaQuery = window.matchMedia(\n      \"(prefers-color-scheme: dark)\"\n    );\n    applyTheme(darkModeMediaQuery);\n\n    // Add listener for changes\n    darkModeMediaQuery.addEventListener(\"change\", applyTheme);\n\n    // Cleanup listener on component unmount\n    return () => {\n      darkModeMediaQuery.removeEventListener(\"change\", applyTheme);\n    };\n  }, []);\n\n  return (\n    <React.StrictMode>\n      <Router>\n        <FormDataProvider>\n          <App />\n        </FormDataProvider>\n      </Router>\n    </React.StrictMode>\n  );\n};\n\nroot.render(<Root />);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,OAASC,aAAa,GAAI,CAAAC,MAAM,KAAQ,kBAAkB,CAC1D,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,cAAc,CAAE;AACvB,OAASC,gBAAgB,KAAQ,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE7D,KAAM,CAAAC,IAAI,CAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAEjE,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACjBZ,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAa,UAAU,CAAIC,CAAC,EAAK,CACxB,GAAIA,CAAC,CAACC,OAAO,CAAE,CACbL,QAAQ,CAACM,eAAe,CAACC,YAAY,CAAC,YAAY,CAAE,MAAM,CAAC,CAC7D,CAAC,IAAM,CACLP,QAAQ,CAACM,eAAe,CAACC,YAAY,CAAC,YAAY,CAAE,OAAO,CAAC,CAC9D,CACF,CAAC,CAED;AACA,KAAM,CAAAC,kBAAkB,CAAGC,MAAM,CAACC,UAAU,CAC1C,8BACF,CAAC,CACDP,UAAU,CAACK,kBAAkB,CAAC,CAE9B;AACAA,kBAAkB,CAACG,gBAAgB,CAAC,QAAQ,CAAER,UAAU,CAAC,CAEzD;AACA,MAAO,IAAM,CACXK,kBAAkB,CAACI,mBAAmB,CAAC,QAAQ,CAAET,UAAU,CAAC,CAC9D,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEN,IAAA,CAACR,KAAK,CAACwB,UAAU,EAAAC,QAAA,cACfjB,IAAA,CAACJ,MAAM,EAAAqB,QAAA,cACLjB,IAAA,CAACF,gBAAgB,EAAAmB,QAAA,cACfjB,IAAA,CAACH,GAAG,GAAE,CAAC,CACS,CAAC,CACb,CAAC,CACO,CAAC,CAEvB,CAAC,CAEDI,IAAI,CAACiB,MAAM,cAAClB,IAAA,CAACK,IAAI,GAAE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}