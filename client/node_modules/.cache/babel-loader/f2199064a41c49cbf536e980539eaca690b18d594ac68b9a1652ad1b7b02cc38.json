{"ast":null,"code":"var _jsxFileName = \"/Users/ayushshukla/Desktop/ayushpred/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./theme.scss\"; // Import the theme styles\nimport { FormDataProvider } from \"./context/FormDataContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nconst Root = () => {\n  _s();\n  useEffect(() => {\n    // Function to apply the theme based on user's preference\n    const applyTheme = e => {\n      if (e.matches) {\n        document.documentElement.setAttribute(\"data-theme\", \"dark\");\n      } else {\n        document.documentElement.setAttribute(\"data-theme\", \"light\");\n      }\n    };\n\n    // Detect user's preference\n    const darkModeMediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    applyTheme(darkModeMediaQuery);\n\n    // Add listener for changes\n    darkModeMediaQuery.addEventListener(\"change\", applyTheme);\n\n    // Cleanup listener on component unmount\n    return () => {\n      darkModeMediaQuery.removeEventListener(\"change\", applyTheme);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(FormDataProvider, {\n        children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Root, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Root;\nroot.render( /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"names":["React","useEffect","ReactDOM","BrowserRouter","Router","App","FormDataProvider","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","Root","_s","applyTheme","e","matches","documentElement","setAttribute","darkModeMediaQuery","window","matchMedia","addEventListener","removeEventListener","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","render","$RefreshReg$"],"sources":["/Users/ayushshukla/Desktop/ayushpred/src/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./theme.scss\"; // Import the theme styles\nimport { FormDataProvider } from \"./context/FormDataContext\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nconst Root = () => {\n  useEffect(() => {\n    // Function to apply the theme based on user's preference\n    const applyTheme = (e) => {\n      if (e.matches) {\n        document.documentElement.setAttribute(\"data-theme\", \"dark\");\n      } else {\n        document.documentElement.setAttribute(\"data-theme\", \"light\");\n      }\n    };\n\n    // Detect user's preference\n    const darkModeMediaQuery = window.matchMedia(\n      \"(prefers-color-scheme: dark)\"\n    );\n    applyTheme(darkModeMediaQuery);\n\n    // Add listener for changes\n    darkModeMediaQuery.addEventListener(\"change\", applyTheme);\n\n    // Cleanup listener on component unmount\n    return () => {\n      darkModeMediaQuery.removeEventListener(\"change\", applyTheme);\n    };\n  }, []);\n\n  return (\n    <React.StrictMode>\n      <Router>\n        <FormDataProvider>\n          <App />\n        </FormDataProvider>\n      </Router>\n    </React.StrictMode>\n  );\n};\n\nroot.render(<Root />);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,aAAa,IAAIC,MAAM,QAAQ,kBAAkB;AAC1D,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,cAAc,CAAC,CAAC;AACvB,SAASC,gBAAgB,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,IAAI,GAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjE,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjBb,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,UAAU,GAAIC,CAAC,IAAK;MACxB,IAAIA,CAAC,CAACC,OAAO,EAAE;QACbN,QAAQ,CAACO,eAAe,CAACC,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC;MAC7D,CAAC,MAAM;QACLR,QAAQ,CAACO,eAAe,CAACC,YAAY,CAAC,YAAY,EAAE,OAAO,CAAC;MAC9D;IACF,CAAC;;IAED;IACA,MAAMC,kBAAkB,GAAGC,MAAM,CAACC,UAAU,CAC1C,8BACF,CAAC;IACDP,UAAU,CAACK,kBAAkB,CAAC;;IAE9B;IACAA,kBAAkB,CAACG,gBAAgB,CAAC,QAAQ,EAAER,UAAU,CAAC;;IAEzD;IACA,OAAO,MAAM;MACXK,kBAAkB,CAACI,mBAAmB,CAAC,QAAQ,EAAET,UAAU,CAAC;IAC9D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACR,KAAK,CAACyB,UAAU;IAAAC,QAAA,eACflB,OAAA,CAACJ,MAAM;MAAAsB,QAAA,eACLlB,OAAA,CAACF,gBAAgB;QAAAoB,QAAA,eACflB,OAAA,CAACH,GAAG;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEvB,CAAC;AAAChB,EAAA,CAnCID,IAAI;AAAAkB,EAAA,GAAJlB,IAAI;AAqCVJ,IAAI,CAACuB,MAAM,eAACxB,OAAA,CAACK,IAAI;EAAAc,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAC,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}